Questions regarding Uploaded Image Classification:

1. Did the three model architectures classify the breed of dog in Dog_01.jpg to be the same breed? If not, report the differences in the classifications.

Answer: Yes, Dog_01 was classified as a american staffordshire terrier, staffordshire terrier, american pit bull terrier, pit bull terrier across all models


2. Did each of the three model architectures classify the breed of dog in Dog_01.jpg to be the same breed of dog as that model architecture classified Dog_02.jpg? If not, report the differences in the classifications.

Answer: No, Alexnet, and Resenet did not recognize it as a dog. They classified it as a "cliff, drop, drop-off" and VGG classified it as a Muzzel


3. Did the three model architectures correctly classify Animal_Name_01.jpg and Object_Name_01.jpg to not be dogs? If not, report the misclassifications.

Answer: Semi, they all classified the Animal correctly as a "Ram, Tup" but the Sword was incorrectly classified by Alexnet and VGG. Only Resenet correctly identified it


4. Based upon your answers for questions 1. - 3. above, select the model architecture that you feel did the best at classifying the four uploaded images. Describe why you selected that model architecture as the best on uploaded image classification.

Answer: With these 4 images (small sample), I would say its essentially a tie between all models. Each  model got Dog_1 correct and identified the Sheep_01 as a Ram. All the models identified the Sword_01 as a not-dog. All three models didnt correctly identify Dog_02. So if I had to choose, I’d lean more towards ResNet because its object guess (letter opener) felt closest to the sword, but by the project’s metrics there’s no clear winner here.


FINAL RESULTS
1. Provide the results from running the check_images.py for all three CNN model architectures

ALEXNET                         RESNET                          VGG
pct_match: 75.00%               pct_match: 82.50%               pct_match: 87.50%
pct_correct_dogs: 100.00%       pct_correct_dogs: 100.00%       pct_correct_dogs: 100.00%
pct_correct_notdogs: 100.00%    pct_correct_notdogs: 90.00%     pct_correct_notdogs: 100.00%
pct_correct_breed: 80.00%       pct_correct_breed: 90.00%       pct_correct_breed: 93.33%

ALEXNET tended to get the following dog breeds wrong:
Boston Terrier ---> Basenji
Great Pyrenees ---> Kuvasz
Golden Retriever  ---> Afghan/Tibetan Mastiff
Beagle ---> English/Walker Foxhound

RESENET tended to get the following dog breeds wrong:
Great Pyrenees ---> Kuvasz
Golden Retriever ---> Leonberg
Beagle ---> Walker Foxhound

VGG tended to get the following dog breeds wrong:
Great Pyrenees ---> Kuvasz
Beagle ---> Walker Foxhound

2. Compare these results to the ones your program produced when you ran run_models_batch.sh
The results match between check_images.py and run_models_batch.sh match that of the course table presented in the previous section. VGG therefore achieves the best dog/not-dog classification plus breed classification accuracy (93.3%). So given this dataset, VGG is the best model.

3. Discuss how the check_images.py addressed the four primary objectives of this Project
Objective 1: Identify whether the images are dogs or not dogs
All three of the classification models (ResNet, AlexNet, VGG) performed exceptionally well here. AlexNet and VGG achieved 100% classification accuracy. However, ResNet only achieved 90% accuracy. This means that ResNet occasionally confused a non-dog image as being a dog. So all the models did well, but we'd tend to prefer RESNET and VGG if this was the only criteria.

Objective 2: Classify the correct dog breeds
The performance differed significantly between the different models. VGG achieed the best (93.3%). However, RESNET only go it right 90% of the time and ALEXNET only 80%. This implies that ResNet and VGG are better at classifying different dog breeds than ALEXNET. But VGG is still the best.

Objective 3: Determine the “best” model for classification
Based on all the results, it would seem as though VGG is the best model for classification. 

Objective 4: Consider the time vs resource trade-offs
ALEXNET completed the task the fastest (in about 2 second) but it didnt classify the breeds as accuratly as VGG
RESENET took around 5 seconds to complete. It offered more balance between time and resources.
VGG took 20 seconds but provided the best results cross both objects

If speed and computational effeciency was the most important factor, then I would resort to RESNET as its "good enough". However, if our goal was to maximize accuracy in both determining dog/not dog as well as to detect different dog breeds, the Id say VGG justifies the time and costs.

